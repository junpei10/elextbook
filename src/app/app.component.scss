@import '@material-lite/angular/theming';
@import './service/media-query/_media-query.sass';
@import './app';

// Mobile first
// 極力 `@include mp` は使わないように

app-root {
  display: block;
}

$pc-nav-elevation-level: 4;

.root-header {
  background-color: transparent;

  height: $mp-normal-header-height + ($mp-normal-header-vertical-margin * 2);
  top: 0;

  &-toolbar {
    height: $mp-toolbar-header-height;
  }

  @include pc {
    height: $pc-header-height;
  }

  &-view {
    position: fixed;
    // top: any;
    left: 0;
    right: 0;
    margin: auto;
    
    width: $mp-header-width;
    border-radius: 8px;

    z-index: 9; // 8
    @include ml-elevation(8);
    
    @include app-theme(background-color, primaryContainer);

    .ml-disabled & {
      pointer-events: none;
      @include app-theme(background-color, disabledContainer);
      @include app-theme(color, disabledText);
    }

    .ml-secondary & {
      background-color: #8BC34A;
      color: white;
    }

    .ml-warn & {
      $palette: map-get($app-light-palette, warn);
      background-color: map-get($palette, color);
      color: map-get($palette, contrast);
    }

    @include pc {
      will-change: background-color;
      transition: ml-create-transition(background-color, normal, angular);
    }

    @include mp {
      perspective: 1000px; // will-change: background-color, border-box, transform, top, height, width;
      transition: ml-create-transition(all, very-slow, angular);
      // transition-property: background-color, border-box, top, height, width;
      // transition-duration: 240ms, 280ms, 400ms, 400ms, 400ms;
      // transition-timing-function: map-get($ml-animation-function, angular);

      @each $name, $value in $app-light-palette {
        @if ($name == primary or $name == accent) {
          .ml-#{$name} & {
            background-color: map-get($value, color);
            color: map-get($value, contrast);
          }
        }
      }

      @each $name, $value in $app-dark-palette {
        @if ($name == primary or $name == accent) {
          .dark-theme .ml-#{$name} & {
            background-color: map-get($value, color);
            color: map-get($value, contrast);
          }
        }
      }

      height: $mp-normal-header-height;
      top: $mp-normal-header-vertical-margin;

      .root-header-toolbar & {
        height: $mp-toolbar-header-height;
        top: $mp-toolbar-header-top;
        width: 100%;
        border-radius: 0;

        @include ml-elevation(2);
      }

      .root-header-searching & {
        height: $mp-searching-header-view-height;
        top: $mp-searching-header-vertical-margin;
        width: 100%;
        border-radius: 0;

        .ml-ripple-element {
          opacity: 0 !important;
        }
      }
    }

    @include pc {
      height: $pc-header-height;
      width: $pc-header-width;
      top: $pc-header-vertical-margin;

      border-radius: 0;

      z-index: 25; // 24 + 1 - navとかぶらないように
      @include ml-elevation($pc-nav-elevation-level);
    }
    // toolbar とかの高さは上のほうで記入済み
  }

  // -contents
  //   - left -> center -> right => wrapper

  &-contents {
    display: flex;
    align-items: center;
    position: relative;
    width: 100%;
    height: 100%;
    max-height: $mp-searching-header-content-height;

    @include pc {
      max-height: 100%;
    }
  }

  &-left-container {
    z-index: 2;
  }

  &-center-container {
    position: relative;
    flex: 1;
    height: 100%;
    z-index: 0;

    pointer-events: none;
    .root-header-searching & {
      pointer-events: auto;
    }

    @include pc {
      pointer-events: auto;
    }
  }

  &-center-content {
    &-enter-active,
    &-leave-active {
      transition: ml-opacity-transition();
    }

    &-enter,
    &-leave-to {
      position: absolute;
      top: 0;
      left: 0;
      opacity: 0;
    }
  }

  &-right-container {
    z-index: 2;

    &-button {
      margin: 0 8px;
    }
  }

  &-wrapper {
    position: absolute !important;
    z-index: 1;
    width: 100%; height: 100%;

    .root-header-toolbar &, .root-header-searching & {
      display: none;
    }
  }

  // left-container
  &-main-action-button {
    // 大きさはデフォルト
    margin: 0 8px;
    font-size: 24px;

    @include pc {
      width: 64px;
      height: 64px !important;
      margin: 0;
    }
  }

  &-backing-icon, &-drawer-icon {
    position: absolute;
    width: 24px; height: 24px;
    opacity: 0;
    transform: rotate(-180deg);
    transition-property: opacity, transform;
    transition-duration: map-get($ml-animation-duration, slow);
    transition-timing-function: map-get($ml-animation-function, angular);

    @include pc {
      width: 32px;
      height: 32px;
    }
  }

  &-backing-type &-backing-icon, &-drawer-type &-drawer-icon {
    opacity: 1;
    transform: rotate(0);
  }

}

.root-main {
  position: relative;
  box-sizing: border-box;

  @include pc {
    padding-left: $pc-nav-width;
  }
}

.root-nav {
  height: 100%;
  display: flex;
  position: fixed;
  @include app-theme(background-color, primaryContainer);

  z-index: 8;
  @include ml-elevation(8);

  top: unset;
  bottom: 0;

  width: 100%;
  height: $mp-nav-height;

  @include pc {
    width: $pc-nav-width;
    height: 100%;

    top: 0;
    left: 0;
    bottom: unset;

    flex-direction: column;

    z-index: 24;
    @include ml-elevation($pc-nav-elevation-level);

    // Header分開ける
    padding-top: $pc-header-height + $pc-header-vertical-margin;
  }

  @include mp {
    transform: translateY(0);

    &-mp-hidden {
      transform: translateY(100%);
    }
  }

  &-button {
    width: 100%;
    height: 100% !important;

    @include pc {
      // 正方形
      height: $pc-nav-width !important;

      padding: 0;
      border-radius: 0;
    }

    &-content {
      display: flex;
      flex-direction: column;
      align-items: center;
    }

    &-icon {
      width: 24px;
      height: 24px;
      @include pc {
        width: 32px;
        height: 32px;
      }
    }

    &-heading {
      font-size: 10px;
      font-weight: 500;
      line-height: 1;
      margin-top: 4px;

      @include pc {
        display: none;
      }
    }
  }

  &-straight-tracker .ml-tracker {
    transition-duration: 400ms;

    @include mp {
      will-change: left;
      transition-property: left;
    }

    @include pc {
      will-change: top;
      transition-property: top;
    }
  }

  &-ink-bar {
    height: 2px;
    width: 100%;

    @include pc {
      height: 100%;
      width: 2px;
    }
  }
}

@keyframes enterRootDrawerPaneAnimation {
  0% {
    background-color: rgba(0,0,0,0);
  }
  100% {
    background-color: rgba(0,0,0,.56);
  }
}
@keyframes leaveRootDrawerPaneAnimation {
  0% {
    background-color: rgba(0,0,0,.56);
  }
  100% {
    background-color: rgba(0,0,0,0);
  }
}

@keyframes enterRootDrawerContentAnimation {
  0% {
    transform: translateX(-100%);
  }
  100% {
    transform: translateX(0);
  }
}

@keyframes leaveRootDrawerContentAnimation {
  0% {
    transform: translateX(0);
  }
  100% {
    transform: translateX(-100%);
  }
}

// $root-drawer-width: 48px;
.root-drawer {
  &-pane {
    position: fixed;
    top: 0;
    width: 100%;
    height: 100%;
    z-index: 16;

    @include pc {
      z-index: 2;
    }

    will-change: animation, background-color;

    animation: ml-create-transition(enterRootDrawerPaneAnimation, slow, angular);
    animation-fill-mode: forwards;

    &.leave-to {
      animation: ml-create-transition(leaveRootDrawerPaneAnimation, slow, angular);
    }
  }

  &-content {
    height: 100%;

    @include ml-elevation(16);

    will-change: animation, transform;

    width: 80%;
    max-width: 480px;
    min-width: auto;

    @include pc {
      display: inline-block;
      width: auto;
      margin-top: $pc-header-height;
      margin-left: $pc-header-height;
    }

    @include app-theme(background-color, primaryContainer);

    transform: translateX(-100%);

    animation: ml-create-transition(enterRootDrawerContentAnimation, slow, angular);
    animation-fill-mode: forwards;

    .leave-to & {
      animation: ml-create-transition(leaveRootDrawerContentAnimation, slow, angular);
    }
  }

  &-pc {
    &-name-buttons {
      display: inline-flex;
      flex-direction: column;
    }

    &-button {
      justify-content: left !important;
      font-weight: 500;
      font-size: 20px;
      padding: 0 40px !important;
      height: $pc-header-height !important;
    }
  }

  &-mp {
    &-header {
      padding: 16px 16px 0;
      h1 { margin: 0; }
    }

    &-divider {
      display: block;
      height: 2px;
      width: 100%;
      margin: 16px 0;

      @include app-theme(background-color, divider);
    }

    &-section {
      display: flex;
      flex-direction: column;

      &-title {
        font-size: 14px;
        font-weight: 500;
        margin: 0 0 8px 16px;
      }

      &-button {
        width: 100%;
        padding-left: 32px !important;
        padding-right: 0 !important;
        justify-content: left !important;
      }
    }
  }
  // transform: translateX(-100%);
}

// .stopped-route-animation + .ng-animating {
//   display: none !important;
// }
